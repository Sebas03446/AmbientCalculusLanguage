// Code generated from AmbientCalculus.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type AmbientCalculusLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var AmbientCalculusLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func ambientcalculuslexerLexerInit() {
	staticData := &AmbientCalculusLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'process'", "'{'", "'}'", "'move'", "';'", "'ambient'", "'to'",
		"'send'", "'receive'", "'from'", "'in'", "'out'", "'open'", "'call'",
		"'print'", "'printc'", "'modifyc'", "'+='", "'-='", "'conditions'",
		"'let'", "'='", "'letc'", "'restriction'", "'('", "')'", "'+'", "'-'",
		"'*'", "'/'", "'>'", "'<'", "'>='", "'<='", "'=='", "'!='",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "AMBIENTID", "ID", "INT", "STRING", "WS", "COMMENT",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
		"T__33", "T__34", "T__35", "AMBIENTID", "ID", "INT", "STRING", "WS",
		"COMMENT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 42, 285, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1,
		2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1,
		5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1,
		8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1,
		9, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12,
		1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1,
		14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16,
		1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1,
		18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19,
		1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1,
		26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31,
		1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 35, 1,
		35, 1, 35, 1, 36, 1, 36, 5, 36, 242, 8, 36, 10, 36, 12, 36, 245, 9, 36,
		1, 37, 1, 37, 5, 37, 249, 8, 37, 10, 37, 12, 37, 252, 9, 37, 1, 38, 4,
		38, 255, 8, 38, 11, 38, 12, 38, 256, 1, 39, 1, 39, 5, 39, 261, 8, 39, 10,
		39, 12, 39, 264, 9, 39, 1, 39, 1, 39, 1, 40, 4, 40, 269, 8, 40, 11, 40,
		12, 40, 270, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 41, 5, 41, 279, 8, 41,
		10, 41, 12, 41, 282, 9, 41, 1, 41, 1, 41, 0, 0, 42, 1, 1, 3, 2, 5, 3, 7,
		4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27,
		14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45,
		23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63,
		32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81,
		41, 83, 42, 1, 0, 8, 1, 0, 97, 122, 3, 0, 48, 57, 95, 95, 97, 122, 1, 0,
		65, 90, 3, 0, 48, 57, 65, 90, 95, 95, 1, 0, 48, 57, 3, 0, 10, 10, 13, 13,
		34, 34, 3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 10, 10, 13, 13, 290, 0, 1, 1,
		0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1,
		0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17,
		1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0,
		25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0,
		0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0,
		0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0,
		0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1,
		0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63,
		1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0,
		71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0,
		0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 1, 85, 1, 0, 0,
		0, 3, 93, 1, 0, 0, 0, 5, 95, 1, 0, 0, 0, 7, 97, 1, 0, 0, 0, 9, 102, 1,
		0, 0, 0, 11, 104, 1, 0, 0, 0, 13, 112, 1, 0, 0, 0, 15, 115, 1, 0, 0, 0,
		17, 120, 1, 0, 0, 0, 19, 128, 1, 0, 0, 0, 21, 133, 1, 0, 0, 0, 23, 136,
		1, 0, 0, 0, 25, 140, 1, 0, 0, 0, 27, 145, 1, 0, 0, 0, 29, 150, 1, 0, 0,
		0, 31, 156, 1, 0, 0, 0, 33, 163, 1, 0, 0, 0, 35, 171, 1, 0, 0, 0, 37, 174,
		1, 0, 0, 0, 39, 177, 1, 0, 0, 0, 41, 188, 1, 0, 0, 0, 43, 192, 1, 0, 0,
		0, 45, 194, 1, 0, 0, 0, 47, 199, 1, 0, 0, 0, 49, 211, 1, 0, 0, 0, 51, 213,
		1, 0, 0, 0, 53, 215, 1, 0, 0, 0, 55, 217, 1, 0, 0, 0, 57, 219, 1, 0, 0,
		0, 59, 221, 1, 0, 0, 0, 61, 223, 1, 0, 0, 0, 63, 225, 1, 0, 0, 0, 65, 227,
		1, 0, 0, 0, 67, 230, 1, 0, 0, 0, 69, 233, 1, 0, 0, 0, 71, 236, 1, 0, 0,
		0, 73, 239, 1, 0, 0, 0, 75, 246, 1, 0, 0, 0, 77, 254, 1, 0, 0, 0, 79, 258,
		1, 0, 0, 0, 81, 268, 1, 0, 0, 0, 83, 274, 1, 0, 0, 0, 85, 86, 5, 112, 0,
		0, 86, 87, 5, 114, 0, 0, 87, 88, 5, 111, 0, 0, 88, 89, 5, 99, 0, 0, 89,
		90, 5, 101, 0, 0, 90, 91, 5, 115, 0, 0, 91, 92, 5, 115, 0, 0, 92, 2, 1,
		0, 0, 0, 93, 94, 5, 123, 0, 0, 94, 4, 1, 0, 0, 0, 95, 96, 5, 125, 0, 0,
		96, 6, 1, 0, 0, 0, 97, 98, 5, 109, 0, 0, 98, 99, 5, 111, 0, 0, 99, 100,
		5, 118, 0, 0, 100, 101, 5, 101, 0, 0, 101, 8, 1, 0, 0, 0, 102, 103, 5,
		59, 0, 0, 103, 10, 1, 0, 0, 0, 104, 105, 5, 97, 0, 0, 105, 106, 5, 109,
		0, 0, 106, 107, 5, 98, 0, 0, 107, 108, 5, 105, 0, 0, 108, 109, 5, 101,
		0, 0, 109, 110, 5, 110, 0, 0, 110, 111, 5, 116, 0, 0, 111, 12, 1, 0, 0,
		0, 112, 113, 5, 116, 0, 0, 113, 114, 5, 111, 0, 0, 114, 14, 1, 0, 0, 0,
		115, 116, 5, 115, 0, 0, 116, 117, 5, 101, 0, 0, 117, 118, 5, 110, 0, 0,
		118, 119, 5, 100, 0, 0, 119, 16, 1, 0, 0, 0, 120, 121, 5, 114, 0, 0, 121,
		122, 5, 101, 0, 0, 122, 123, 5, 99, 0, 0, 123, 124, 5, 101, 0, 0, 124,
		125, 5, 105, 0, 0, 125, 126, 5, 118, 0, 0, 126, 127, 5, 101, 0, 0, 127,
		18, 1, 0, 0, 0, 128, 129, 5, 102, 0, 0, 129, 130, 5, 114, 0, 0, 130, 131,
		5, 111, 0, 0, 131, 132, 5, 109, 0, 0, 132, 20, 1, 0, 0, 0, 133, 134, 5,
		105, 0, 0, 134, 135, 5, 110, 0, 0, 135, 22, 1, 0, 0, 0, 136, 137, 5, 111,
		0, 0, 137, 138, 5, 117, 0, 0, 138, 139, 5, 116, 0, 0, 139, 24, 1, 0, 0,
		0, 140, 141, 5, 111, 0, 0, 141, 142, 5, 112, 0, 0, 142, 143, 5, 101, 0,
		0, 143, 144, 5, 110, 0, 0, 144, 26, 1, 0, 0, 0, 145, 146, 5, 99, 0, 0,
		146, 147, 5, 97, 0, 0, 147, 148, 5, 108, 0, 0, 148, 149, 5, 108, 0, 0,
		149, 28, 1, 0, 0, 0, 150, 151, 5, 112, 0, 0, 151, 152, 5, 114, 0, 0, 152,
		153, 5, 105, 0, 0, 153, 154, 5, 110, 0, 0, 154, 155, 5, 116, 0, 0, 155,
		30, 1, 0, 0, 0, 156, 157, 5, 112, 0, 0, 157, 158, 5, 114, 0, 0, 158, 159,
		5, 105, 0, 0, 159, 160, 5, 110, 0, 0, 160, 161, 5, 116, 0, 0, 161, 162,
		5, 99, 0, 0, 162, 32, 1, 0, 0, 0, 163, 164, 5, 109, 0, 0, 164, 165, 5,
		111, 0, 0, 165, 166, 5, 100, 0, 0, 166, 167, 5, 105, 0, 0, 167, 168, 5,
		102, 0, 0, 168, 169, 5, 121, 0, 0, 169, 170, 5, 99, 0, 0, 170, 34, 1, 0,
		0, 0, 171, 172, 5, 43, 0, 0, 172, 173, 5, 61, 0, 0, 173, 36, 1, 0, 0, 0,
		174, 175, 5, 45, 0, 0, 175, 176, 5, 61, 0, 0, 176, 38, 1, 0, 0, 0, 177,
		178, 5, 99, 0, 0, 178, 179, 5, 111, 0, 0, 179, 180, 5, 110, 0, 0, 180,
		181, 5, 100, 0, 0, 181, 182, 5, 105, 0, 0, 182, 183, 5, 116, 0, 0, 183,
		184, 5, 105, 0, 0, 184, 185, 5, 111, 0, 0, 185, 186, 5, 110, 0, 0, 186,
		187, 5, 115, 0, 0, 187, 40, 1, 0, 0, 0, 188, 189, 5, 108, 0, 0, 189, 190,
		5, 101, 0, 0, 190, 191, 5, 116, 0, 0, 191, 42, 1, 0, 0, 0, 192, 193, 5,
		61, 0, 0, 193, 44, 1, 0, 0, 0, 194, 195, 5, 108, 0, 0, 195, 196, 5, 101,
		0, 0, 196, 197, 5, 116, 0, 0, 197, 198, 5, 99, 0, 0, 198, 46, 1, 0, 0,
		0, 199, 200, 5, 114, 0, 0, 200, 201, 5, 101, 0, 0, 201, 202, 5, 115, 0,
		0, 202, 203, 5, 116, 0, 0, 203, 204, 5, 114, 0, 0, 204, 205, 5, 105, 0,
		0, 205, 206, 5, 99, 0, 0, 206, 207, 5, 116, 0, 0, 207, 208, 5, 105, 0,
		0, 208, 209, 5, 111, 0, 0, 209, 210, 5, 110, 0, 0, 210, 48, 1, 0, 0, 0,
		211, 212, 5, 40, 0, 0, 212, 50, 1, 0, 0, 0, 213, 214, 5, 41, 0, 0, 214,
		52, 1, 0, 0, 0, 215, 216, 5, 43, 0, 0, 216, 54, 1, 0, 0, 0, 217, 218, 5,
		45, 0, 0, 218, 56, 1, 0, 0, 0, 219, 220, 5, 42, 0, 0, 220, 58, 1, 0, 0,
		0, 221, 222, 5, 47, 0, 0, 222, 60, 1, 0, 0, 0, 223, 224, 5, 62, 0, 0, 224,
		62, 1, 0, 0, 0, 225, 226, 5, 60, 0, 0, 226, 64, 1, 0, 0, 0, 227, 228, 5,
		62, 0, 0, 228, 229, 5, 61, 0, 0, 229, 66, 1, 0, 0, 0, 230, 231, 5, 60,
		0, 0, 231, 232, 5, 61, 0, 0, 232, 68, 1, 0, 0, 0, 233, 234, 5, 61, 0, 0,
		234, 235, 5, 61, 0, 0, 235, 70, 1, 0, 0, 0, 236, 237, 5, 33, 0, 0, 237,
		238, 5, 61, 0, 0, 238, 72, 1, 0, 0, 0, 239, 243, 7, 0, 0, 0, 240, 242,
		7, 1, 0, 0, 241, 240, 1, 0, 0, 0, 242, 245, 1, 0, 0, 0, 243, 241, 1, 0,
		0, 0, 243, 244, 1, 0, 0, 0, 244, 74, 1, 0, 0, 0, 245, 243, 1, 0, 0, 0,
		246, 250, 7, 2, 0, 0, 247, 249, 7, 3, 0, 0, 248, 247, 1, 0, 0, 0, 249,
		252, 1, 0, 0, 0, 250, 248, 1, 0, 0, 0, 250, 251, 1, 0, 0, 0, 251, 76, 1,
		0, 0, 0, 252, 250, 1, 0, 0, 0, 253, 255, 7, 4, 0, 0, 254, 253, 1, 0, 0,
		0, 255, 256, 1, 0, 0, 0, 256, 254, 1, 0, 0, 0, 256, 257, 1, 0, 0, 0, 257,
		78, 1, 0, 0, 0, 258, 262, 5, 34, 0, 0, 259, 261, 8, 5, 0, 0, 260, 259,
		1, 0, 0, 0, 261, 264, 1, 0, 0, 0, 262, 260, 1, 0, 0, 0, 262, 263, 1, 0,
		0, 0, 263, 265, 1, 0, 0, 0, 264, 262, 1, 0, 0, 0, 265, 266, 5, 34, 0, 0,
		266, 80, 1, 0, 0, 0, 267, 269, 7, 6, 0, 0, 268, 267, 1, 0, 0, 0, 269, 270,
		1, 0, 0, 0, 270, 268, 1, 0, 0, 0, 270, 271, 1, 0, 0, 0, 271, 272, 1, 0,
		0, 0, 272, 273, 6, 40, 0, 0, 273, 82, 1, 0, 0, 0, 274, 275, 5, 47, 0, 0,
		275, 276, 5, 47, 0, 0, 276, 280, 1, 0, 0, 0, 277, 279, 8, 7, 0, 0, 278,
		277, 1, 0, 0, 0, 279, 282, 1, 0, 0, 0, 280, 278, 1, 0, 0, 0, 280, 281,
		1, 0, 0, 0, 281, 283, 1, 0, 0, 0, 282, 280, 1, 0, 0, 0, 283, 284, 6, 41,
		0, 0, 284, 84, 1, 0, 0, 0, 7, 0, 243, 250, 256, 262, 270, 280, 1, 6, 0,
		0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// AmbientCalculusLexerInit initializes any static state used to implement AmbientCalculusLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewAmbientCalculusLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func AmbientCalculusLexerInit() {
	staticData := &AmbientCalculusLexerLexerStaticData
	staticData.once.Do(ambientcalculuslexerLexerInit)
}

// NewAmbientCalculusLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewAmbientCalculusLexer(input antlr.CharStream) *AmbientCalculusLexer {
	AmbientCalculusLexerInit()
	l := new(AmbientCalculusLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &AmbientCalculusLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "AmbientCalculus.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// AmbientCalculusLexer tokens.
const (
	AmbientCalculusLexerT__0      = 1
	AmbientCalculusLexerT__1      = 2
	AmbientCalculusLexerT__2      = 3
	AmbientCalculusLexerT__3      = 4
	AmbientCalculusLexerT__4      = 5
	AmbientCalculusLexerT__5      = 6
	AmbientCalculusLexerT__6      = 7
	AmbientCalculusLexerT__7      = 8
	AmbientCalculusLexerT__8      = 9
	AmbientCalculusLexerT__9      = 10
	AmbientCalculusLexerT__10     = 11
	AmbientCalculusLexerT__11     = 12
	AmbientCalculusLexerT__12     = 13
	AmbientCalculusLexerT__13     = 14
	AmbientCalculusLexerT__14     = 15
	AmbientCalculusLexerT__15     = 16
	AmbientCalculusLexerT__16     = 17
	AmbientCalculusLexerT__17     = 18
	AmbientCalculusLexerT__18     = 19
	AmbientCalculusLexerT__19     = 20
	AmbientCalculusLexerT__20     = 21
	AmbientCalculusLexerT__21     = 22
	AmbientCalculusLexerT__22     = 23
	AmbientCalculusLexerT__23     = 24
	AmbientCalculusLexerT__24     = 25
	AmbientCalculusLexerT__25     = 26
	AmbientCalculusLexerT__26     = 27
	AmbientCalculusLexerT__27     = 28
	AmbientCalculusLexerT__28     = 29
	AmbientCalculusLexerT__29     = 30
	AmbientCalculusLexerT__30     = 31
	AmbientCalculusLexerT__31     = 32
	AmbientCalculusLexerT__32     = 33
	AmbientCalculusLexerT__33     = 34
	AmbientCalculusLexerT__34     = 35
	AmbientCalculusLexerT__35     = 36
	AmbientCalculusLexerAMBIENTID = 37
	AmbientCalculusLexerID        = 38
	AmbientCalculusLexerINT       = 39
	AmbientCalculusLexerSTRING    = 40
	AmbientCalculusLexerWS        = 41
	AmbientCalculusLexerCOMMENT   = 42
)
